
plugins {
    id 'cpp-library' // <1>
    id 'cpp-unit-test' // <2>
}

library {
    targetMachines = [
            machines.linux.x86_64,
            machines.windows.x86, machines.windows.x86_64,
            machines.macOS.x86_64
    ]
}

tasks.withType(CppCompile).configureEach {
    // Define a preprocessor macro for every binary
    macros.put("NDEBUG", null)

    // Define a compiler options
    compilerArgs.add '-fno-omit-frame-pointer'
    compilerArgs.add '-fexceptions'
    compilerArgs.add '-fvisibility=hidden'
    compilerArgs.add '-ffunction-sections'
    compilerArgs.add '-fdata-sections'
    compilerArgs.add '-Wall'
    compilerArgs.add '-std=c++11'
//    compilerArgs.add '-W3'

    // Define toolchain-specific compiler options
    compilerArgs.addAll toolChain.map { toolChain ->
        if (toolChain in [ Gcc, Clang ]) {
            return ['-O2', '-fno-access-control']
        } else if (toolChain in VisualCpp) {
            return ['/Zi']
        }
        return []
    }
}
